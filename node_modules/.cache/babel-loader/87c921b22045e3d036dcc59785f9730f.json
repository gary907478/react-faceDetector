{"ast":null,"code":"var _jsxFileName = \"/Users/cloudz404/Desktop/react-faceDetector/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Clarifai from 'clarifai';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport './App.css';\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 400,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: '#fff'\n    },\n    shape: {\n      type: 'circle',\n      stroke: {\n        width: 0,\n        color: '#000000'\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      image: {\n        src: 'img/github.svg',\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 0.5,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    size: {\n      value: 10,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: false,\n      distance: 500,\n      color: '#ffffff',\n      opacity: 0.4,\n      width: 2\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: 'bottom',\n      random: false,\n      straight: false,\n      out_mode: 'out',\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'bubble'\n      },\n      onclick: {\n        enable: true,\n        mode: 'repulse'\n      },\n      resize: true\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 0.5\n        }\n      },\n      bubble: {\n        distance: 400,\n        size: 4,\n        duration: 0.3,\n        opacity: 1,\n        speed: 3\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      }\n    }\n  },\n  retina_detect: true\n};\nconst app = new Clarifai.App({\n  apiKey: 'edb99c5d2b4e4eb3b2f48f5f71c37f22'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imgUrl = _this$state.imgUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imgUrl: imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cloudz404/Desktop/react-faceDetector/src/App.js"],"names":["React","Component","Navigation","Logo","Rank","FaceRecognition","Signin","Register","ImageLinkForm","Clarifai","Particles","particlesOption","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","Number","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Clarifai from 'clarifai'\nimport 'tachyons'\nimport Particles from 'react-particles-js'\nimport './App.css'\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 400,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: '#fff'\n    },\n    shape: {\n      type: 'circle',\n      stroke: {\n        width: 0,\n        color: '#000000'\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      image: {\n        src: 'img/github.svg',\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 0.5,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    size: {\n      value: 10,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: false,\n      distance: 500,\n      color: '#ffffff',\n      opacity: 0.4,\n      width: 2\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: 'bottom',\n      random: false,\n      straight: false,\n      out_mode: 'out',\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'bubble'\n      },\n      onclick: {\n        enable: true,\n        mode: 'repulse'\n      },\n      resize: true\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 0.5\n        }\n      },\n      bubble: {\n        distance: 400,\n        size: 4,\n        duration: 0.3,\n        opacity: 1,\n        speed: 3\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      }\n    }\n  },\n  retina_detect: true\n}\n\nconst app = new Clarifai.App({\n  apiKey: 'edb99c5d2b4e4eb3b2f48f5f71c37f22'\n})\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n  // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then(response => response.json())\n  //     .then(console.log);\n  // }\n\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    console.log(width, height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox = box => {\n    console.log(box)\n    this.setState({ box: box })\n  }\n  onInputChange = event => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imgUrl: this.state.input })\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(\n                Object.assign(this.state.user, {\n                  entries: count\n                })\n              )\n            })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = route => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, imgUrl, route, box } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOption} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === 'home' ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n        ) : route === 'signin' ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}